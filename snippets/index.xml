<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Snippets on Nějaký kusy informací</title>
    <link>/snippets/</link>
    <description>Recent content in Snippets on Nějaký kusy informací</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 17 Nov 2016 19:58:21 +0100</lastBuildDate>
    <atom:link href="/snippets/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Vytvoření RPM balíku přímo z Cargo projektu</title>
      <link>/content/snippets/rust_plus_tito/</link>
      <pubDate>Thu, 17 Nov 2016 19:58:21 +0100</pubDate>
      
      <guid>/content/snippets/rust_plus_tito/</guid>
      <description>

&lt;h2 id=&#34;co-je-cargo&#34;&gt;Co je Cargo&lt;/h2&gt;

&lt;p&gt;Cargo je správce projektů vytvořených v Rustu.
Projekty jsou automaticky přidány do git repozitáře =&amp;gt; ideál to zabalit
zrovna z toho.&lt;/p&gt;

&lt;h2 id=&#34;použité-nástroje&#34;&gt;Použité nástroje&lt;/h2&gt;

&lt;p&gt;Balíky ve Fedoře:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;tito&lt;/li&gt;
&lt;li&gt;rpmdevtools&lt;/li&gt;
&lt;li&gt;mock&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;vytvořit-nebo-vybrat-nějaký-projekt&#34;&gt;Vytvořit nebo vybrat nějaký projekt&lt;/h2&gt;

&lt;p&gt;např. já jsem forknul Smith: &lt;a href=&#34;https://github.com/msehnout/Smith&#34;&gt;https://github.com/msehnout/Smith&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone &amp;lt;repository&amp;gt;
$ cd &amp;lt;repository&amp;gt;
$ git branch rpm #budu používat pro build v Copr
$ git checkout rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;inicializace-pro-použití-s-tito&#34;&gt;Inicializace pro použití s tito&lt;/h2&gt;

&lt;p&gt;Jednoduše pomocí:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ tito init&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;vytvoření-nového-spec-souboru&#34;&gt;Vytvoření nového spec souboru&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rpmdev-newspec smith
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;vyplnit jméno, licenci, závislosti apod.&lt;/li&gt;
&lt;li&gt;build bude pomocí cargo =&amp;gt; bude potřeba internet na stažení závislostí (většinou z crates.io, případně z gitu). Tady je dobré mít v repozitáři soubor Cargo.lock, který zajistí, že při každém buildu z toho vyleze to samé. Kdyby tam nebyl, tak se můžou změnit verze závislostí:
&lt;a href=&#34;http://doc.crates.io/faq.html#why-do-binaries-have-cargolock-in-version-control-but-not-libraries&#34;&gt;http://doc.crates.io/faq.html#why-do-binaries-have-cargolock-in-version-control-but-not-libraries&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;PROBLÉM&lt;/strong&gt;: Verze je tam 2x, jedno ve spec, podruhé v Cargo.toml, co s tím? Nápady:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Skript, který bude spouštět tito a přepisovat verzi ve spec file&lt;/li&gt;
&lt;li&gt;Připsat do tito, aby to umělo samo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Doporučení:&lt;/strong&gt; Zkontroluj si spec pomocí rpmlint&lt;/p&gt;

&lt;h2 id=&#34;lokální-testovací-build-z-posledního-commitu&#34;&gt;Lokální testovací build z posledního commitu&lt;/h2&gt;

&lt;p&gt;Pozor, je to opravdu build z posledního commitu nikoliv pracovního adresáře.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ tito build --srpm --test`
WARNING: unable to lookup latest package tag, building untagged test project
WARNING: .tito/packages/smith doesn&#39;t exist in git, using current directory
Building package [smith-0.3.8-1]
Wrote: /tmp/tito/smith-git-71.b8bcb1a.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;build-rpm&#34;&gt;Build RPM:&lt;/h2&gt;

&lt;p&gt;Lokální build RPM je možné spustit pomocí:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ mock -r fedora-24-x86_64 --rebuild /tmp/tito/smith-0.3.8-1.git.71.b8bcb1a.fc24.src.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nejspíš by to šlo i pomocí tito, ale tam se využívají lokálně instalované balíky, což je problém, protože nepoužívám Rust z repozitářů.&lt;/p&gt;

&lt;h2 id=&#34;vytvoření-tagu-verze&#34;&gt;Vytvoření tagu verze&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ tito tag --use-version=$(grep version Cargo.toml | grep -o &amp;quot;[0-9]*\.[0-9]*\.[0-9]*&amp;quot;)
$ git push
$ git push --tags
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;vytvořit-copr-repozitář-a-balík&#34;&gt;Vytvořit Copr repozitář a balík&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Vytvoření repozitáře&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Potřeba f24 a výš kvůli Rustu&lt;/li&gt;
&lt;li&gt;přístup k internetu, cargo si bude stahovat všechny závislosti&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Balík&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;https odkaz na git&lt;/li&gt;
&lt;li&gt;větev rpm&lt;/li&gt;
&lt;li&gt;specifikovat, jestli dělat build z posledního commitu nebo tagu (test)&lt;/li&gt;
&lt;li&gt;github webhook&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Klik na rebuild a už to fičí ☺&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Instalovat =&amp;gt; Používat&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>FTP over TLS with vsftpd</title>
      <link>/snippets/vsftpd-over-tls/</link>
      <pubDate>Mon, 29 Aug 2016 10:56:42 +0200</pubDate>
      
      <guid>/snippets/vsftpd-over-tls/</guid>
      <description>

&lt;h1 id=&#34;how-to-set-up-vsftpd-over-ssl-tls&#34;&gt;How to set up vsftpd over SSL/TLS&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Install &lt;code&gt;vsftpd&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# &amp;lt;pkg manager&amp;gt; &amp;lt;install command&amp;gt; vsftpd openssl
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Generate self signed certificate &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-configure-vsftpd-to-use-ssl-tls-on-an-ubuntu-vps&#34;&gt;1&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo openssl req -x509 -nodes -days 365 -newkey rsa:1024 -keyout /etc/ssl/private/vsftpd.pem -out /etc/ssl/private/vsftpd.pem
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Configure vsftpd.conf:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssl_enable=YES
ssl_sslv2=NO
ssl_sslv3=NO
ssl_tlsv1=NO
ssl_tlsv1_1=NO
ssl_tlsv1_2=YES
# ^^^ Only available on CentOS
rsa_cert_file=/etc/ssl/private/vsftpd.pem
rsa_private_key_file=/etc/ssl/private/vsftpd.pem
allow_anon_ssl=NO
force_local_data_ssl=YES
force_local_logins_ssl=YES
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Run vsftpd service&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;how-to-test-it&#34;&gt;How to test it&lt;/h2&gt;

&lt;p&gt;Since SSL is used, netcat cannot be used anymore, but openssl provides something similar:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ openssl s_client -connect localhost:21 -starttls ftp -tls1_2
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>How to move libvirt images into /home directory</title>
      <link>/snippets/move-virt-images/</link>
      <pubDate>Mon, 29 Aug 2016 10:52:08 +0200</pubDate>
      
      <guid>/snippets/move-virt-images/</guid>
      <description>

&lt;h2 id=&#34;objectives&#34;&gt;Objectives&lt;/h2&gt;

&lt;p&gt;Do not waste space in / partition, because it&amp;rsquo;s usually too small.&lt;/p&gt;

&lt;h2 id=&#34;step-by-step-solution&#34;&gt;Step by step solution&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create new directory /home/dir and move images

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;# mv /var/lib/libvirt/images/* /home/dir/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Set SElinux context for files in this directory

&lt;ul&gt;
&lt;li&gt;Check the context of libvirt directory: &lt;code&gt;semanage fcontext -l | grep virt_image&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Use the same for the new directory: &lt;code&gt;semanage fcontext -a -t virt_image_t &amp;quot;/home/virtstorage(/.*)?&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;restorecon -R /home/virtstorage/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Add alternative storage pool

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;virsh pool-dumpxml default &amp;gt; pool.xml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Change name, delete uuid (but leave tags there) and change the path&lt;/li&gt;
&lt;li&gt;&lt;code&gt;virsh pool-create pool.xml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;virsh pool-refresh name&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;pool type=&#39;dir&#39;&amp;gt;
    &amp;lt;name&amp;gt;newname&amp;lt;/name&amp;gt;
    &amp;lt;uuid&amp;gt;&amp;lt;/uuid&amp;gt;
    &amp;lt;capacity unit=&#39;bytes&#39;&amp;gt;1234&amp;lt;/capacity&amp;gt;
    &amp;lt;allocation unit=&#39;bytes&#39;&amp;gt;1234&amp;lt;/allocation&amp;gt;
    &amp;lt;available unit=&#39;bytes&#39;&amp;gt;1234&amp;lt;/available&amp;gt;
    &amp;lt;source&amp;gt;
    &amp;lt;/source&amp;gt;
    &amp;lt;target&amp;gt;
        &amp;lt;path&amp;gt;/home/dir&amp;lt;/path&amp;gt;
    &amp;lt;/target&amp;gt;
&amp;lt;/pool&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>